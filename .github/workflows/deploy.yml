# This is a basic workflow to help you get started with Actions

name: Deploy Web App to GAE

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [GP-36_big-query-cron]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# this only allows one job to run for each env at a time
concurrency:
  group: environment-${{ github.ref }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  lint_test:
    name: Lint and Test Application Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - uses: actions/checkout@v2
      - name: Setup
        run: make setup
      - name: Install Dev dependencies
        run: make install_dev
      - name: Lint Code
        run: make lint
      - name: Test Code
        run: make test
  deploy:
    name: Deploying to Google Cloud
    runs-on: ubuntu-latest
    needs: lint_test

    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x" # Version range or exact version of a Python version to use, using SemVer's version range syntax
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.terraform-version }}
          terraform_wrapper: false
      - name: Terraform ouput to env vars
        id: tf_output # to get output vars from step in other steps
        env: 
          GOOGLE_CREDENTIALS: ${{ secrets.GCLOUD_KEY }}
        run: |
          echo "::set-output gcp_project_id=terraform output project_id"

      - name: Deploy to App Engine
        id: deploy
        uses: google-github-actions/deploy-appengine@v0.2.0
        with:
          deliverables: app.yaml
          version: v1
          project_id: ${{ steps.tf_output.outputs.gcp_project_id }}
          credentials: ${{ secrets.GCLOUD_KEY }}
